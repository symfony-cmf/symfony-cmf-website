static:
    home:
        name: ""
        title: "Home"
        template: "cms/home.html.twig"
        body: |
                <h2>The Symfony CMF Project</h2>
                <p>
                    Welcome to the home of the <a href="http://symfony.com">Symfony</a>
                    Content Management Framework. The project is organized by the Symfony
                    community and has several sponsoring companies and prominent open
                    source leaders implementing the philosophy of the
                    <a href="http://decoupledcms.org">decoupled CMS</a>.
                    You can read learn more about the project on the
                    <a href="/about">about</a> page.
                </p>

                <h2>Mission Statement</h2>
                <p>
                    The Symfony CMF project makes it easier for <strong>developers</strong>
                    to add <strong>CMS functionality</strong> to applications built with
                    the <strong>Symfony PHP</strong> framework. Key development principles
                    for the provided <strong>set of bundles</strong> are <strong>scalability</strong>,
                    <strong>usability</strong>, <strong>documentation</strong> and
                    <strong>testing</strong>.
                </p>

                <h2>Try it out</h2>
                <p>
                    Visit the online <a target="_blank" href="http://sandbox.cmf.symfony.com/">Demo</a> page to get a glimpse of what can be done using with Symfony CMF.
                </p>
                <p>
                    Like what you see? <a href="/get-started">Get started!</a>
                </p>

                <a name="slides"></a>
                <h2>Slides</h2>
                <ul>
                    <li><a href="./slides/why_symfony_cmf.html">Why Symfony CMF?</a></li>
                    <li><a href="./slides/bigpicture.html">The big picture</a></li>
                    <li><a href="http://phpcr.github.com/slides.html">PHPCR</a></li>
                    <li><a href="http://phpcr.github.com/slides-odm.html">PHPCR ODM</a></li>
                    <li><a href="./slides/routingandmenu.html">Routing and Menu</a></li>
                </ul>

                <h2>Documentation</h2>
                <ul>
                    <li><a href="http://symfony.com/doc/master/cmf/index.html">Symfony CMF docs</a></li>
                    <li><a href="https://github.com/symfony-cmf/symfony-cmf/wiki">Symfony CMF wiki</a></li>
                    <li><a href="http://docs.doctrine-project.org/projects/doctrine-phpcr-odm/en/latest/">PHPCR ODM</a></li>
                </ul>

                <a name="bundles"></a>
                <h2>Bundles</h2>
                <ul>
                    <li><a href="https://github.com/symfony-cmf/BlockBundle">BlockBundle</a> (integrates PHPCR with SonataBlockBundle)</li>
                    <li><a href="https://github.com/symfony-cmf/CoreBundle">CoreBundle</a> (provides some common helpers for content rendering)</li>
                    <li><a href="https://github.com/symfony-cmf/ContentBundle">ContentBundle</a> (provides basic classes for defining content)</li>
                    <li><a href="https://github.com/symfony-cmf/MenuBundle">MenuBundle</a> (integrates PHPCR with KnpMenuBundle)</li>
                    <li><a href="https://github.com/symfony-cmf/RoutingBundle">RoutingBundle</a> (adds dynamic routing)</li>
                    <li><a href="https://github.com/symfony-cmf/SeoBundle">SeoBundle</a> (adds SEO optimization capabilities)</li>
                    <li><a href="https://github.com/sonata-project/SonataDoctrinePhpcrAdminBundle">SonataDoctrinePhpcrAdminBundle</a> (integrates PHPCR with SonataAdminBundle)</li>
                    <li><a href="https://github.com/symfony-cmf/TreeBrowserBundle">TreeBrowserBundle</a> (adds a javascript UI to browse PHPCR content repositories)</li>
                </ul>

    news:
        name: "news"
        title: "News"
        formats: [html, rss]
        template: cms/news_overview.{_format}.twig
        class: "\\AppBundle\\Document\\SeoPage"
        options:
            add_format_pattern: true
            displayChildren: false
            currentUriPrefix: "/news"
        body: <p>The latest news about the Symfony CMF (<a href="/news.rss" >RSS feed</a>):</p>
        seo-metadata:
            description: "News around the Symfony CMF"
            keywords:    "News"

    cmf-featured-on-symfony-com:
        name: "cmf-featured-on-symfony-com"
        parent: "/news"
        title: "Symfony CMF featured on symfony.com"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2012-06-05"
        body: |
            David wrote a <a href="http://symfony.com/blog/the-symfony-content-management-framework-is-getting-ready#">blog post</a>
            for symfony.com on the current state of the Symfony CMF project.
            He also mentions the work that Frederic Haddad has been doing leveraging the CMF for his clients that
            he illustrates in this <a href="http://www.youtube.com/watch?v=i5Y5QPcYWHw">short video</a>. Looks
            like the Symfony CMF is ready for prime time!

    cmf-sandbox-now-running-with-multiple-different-phpcr-implementations:
        name: "cmf-sandbox-now-running-with-multiple-different-phpcr-implementations"
        parent: "/news"
        title: "Symfony CMF sandbox now running with multiple different PHPCR implementations"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2012-06-12"
        body: |
            One of the fundamental ideas of PHPCR is that there can be multiple implementations that
            from an API act and behave exactly the same, but can be optimized for every different
            scalability and server requirements. We have been adding functional tests for the sandbox,
            but initially only tested using the <a href="https://github.com/jackalope/jackalope-jackrabbit">Jackrabbit</a>
            based PHPCR implementation. In the past weeks we have now also
            <a href="http://travis-ci.org/symfony-cmf/cmf-sandbox">enabled running the same tests</a>
            against the <a href="https://github.com/jackalope/jackalope-doctrine-dbal">Doctrine DBAL</a> and
            <a href="http://midgard-project.org/phpcr/">Midgard</a> implementations. The key thing is
            that all we had to do was adjust the configuration, no code changes were necessary. This is
            the best validation of the concept of PHPCR possible! It proofs that the same code can run
            against now 3 different implementations of PHPCR!

    jackalope-doctrine-dbal-now-compatible-with-postgresql-and-sqlite:
        name: "jackalope-doctrine-dbal-now-compatible-with-postgresql-and-sqlite"
        parent: "/news"
        title: "Jackalope Doctrine DBAL now compatible with PostgreSQL and SQLite"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2012-07-19"
        body: |
              Thanks to the work of <a href="https://github.com/cryptocompress">cryptocompress</a> the Jackalope
              test suite for the Doctrine DBAL implementation now also
              <a href="http://travis-ci.org/jackalope/jackalope-doctrine-dbal">runs with PostgreSQL and SQLite</a>!
              Previously it only passed using MySQL for storage. This is a major milestone as once you can support 3
              so radically different RDBMS there is little doubt left that we cannot easily support others too. More
              importantly this was all done in a very short time frame and we now have worked around many of the
              special gotcha's of MySQL. As a result we expect that adding support for other RDBMS will only
              take a minimal amount of time.

    symfony-cmf_at-the-create-js-hackathon-in-berlin:
        name: "symfony-cmf_at-the-create-js-hackathon-in-berlin"
        parent: "/news"
        title: "Symfony CMF at the Create.js hackathon in Berlin"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2012-07-21"
        body: |
              The Symfony CMF has featured integration with create.js and VIE for inline editing for quite sometime
              already. As a matter of fact <a href="http://liip.ch">Liip</a> is one of the big contributors thanks to the
              <a href="http://blog.liip.ch/archive/2011/12/23/what-liip-did-after-winning-the-iks-semantics-ux-contest.html">UX design prize</a>
              Liip won showcasing our work integrating create.js into the Symfony CMF sandbox. David represented the CMF project
              at the <a href="http://lanyrd.com/2012/createjs-hackathon-berlin/">hackathon in Berlin</a>. You can read some more
              information on <a href="http://bergie.iki.fi/blog/createjs-update/">what is going on with create.js</a> on Henri's blog.

    cmf-docs-and-standard-edition:
        name: "cmf-docs-and-standard-edition"
        parent: "/news"
        title: "Symfony CMF docs and standard edition"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2012-08-01"
        body: |
              We have finally setup our <a href="http://symfony-cmf.readthedocs.org">documentation</a> on readthedocs.org.
              There is still a fair bit of work to make the documentation complete. But the installation instructions
              should already be a big help in getting started. More importantly any new contributions will automatically
              show up at the above URL within a few seconds. However we have also setup a new repository to illustrate
              the bare minimum configuration necessary to run the CMF. As its can also be used as a starting point to
              create your own CMF project we have labeled it the <a href="http://symfony-cmf.readthedocs.org">CMF Standard Edition</a>.

    cmf-website-update:
        name: "cmf-website-update"
        parent: "/news"
        title: "Symfony CMF website update"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2012-09-29"
        body: |
              In an effort to eat our own dog food, we have finally <a href="https://github.com/symfony-cmf/symfony-cmf-website/pull/6">updated</a>
              this website to use the Symfony CMF. The bulk of the work was done during the
              <a href="https://rocketlab.liip.ch/event/cmf_hackday_september">recent hackathon</a>
              at the <a href="http://liip.ch">Liip</a> offices in Fribourg. Overall the hackathon was very productive, you
              can read a <a href="https://groups.google.com/d/msg/symfony-cmf-devs/XwaDeFam79I/uOfiyGzGpVMJ">short summary here</a>.
              In a second step we have also <a href="https://github.com/symfony-cmf/symfony-cmf-website/pull/7">added a news system</a>
              based on the SimpleCmsBundle, including an <a href="http://cmf.symfony.com/news.rss">RSS feed</a>.

    demo-website-update:
        name: "demo-website-update"
        parent: "/news"
        title: "Symfony CMF demo website update"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2012-10-22"
        body: |
              The pace of development has picked up quite a bit since the summer. One of the big things that finally
              landed in the <a href="http://sandbox.cmf.symfony.com">demo site</a> is the integration with <a href="https://github.com/flack/createphp">createphp</a>.
              One of the big benefits of createphp is that it can help with generating RDFa output inside
              <a href="https://github.com/symfony-cmf/cmf-sandbox/blob/master/src/Sandbox/MainBundle/Resources/views/MultilangStaticContent/index.html.twig">templates</a>.
              The image upload is now actually functional and all the CMF Bundles and libraries have been updated
              to their respective latest versions. Finally we are now using the <a href="https://github.com/lunetics/LocaleBundle">LuneticsLocaleBundle</a>
              as the language switcher. To be able to use such a general purpose Bundle, build around the
              <a href="https://github.com/symfony/Routing">static routing</a> component of Symfony core, with our
              <a href="https://github.com/symfony-cmf/Routing">dynamic routing</a> component marks a major step in ensuring
              that the development experience with the CMF remains as simple and predictable as with just Symfony itself.
              In this context we are also pleased to announce that <a href="https://github.com/ezsystems/ezp-next/blob/master/composer.json#L33">eZPublish5></a>
              will ship using our routing component. Drupal is also <a href="http://drupal.org/node/1606794">in the process</a>
              of adopting it for their upcoming Drupal 8 release.

    cmf-docs-moved:
        name: "cmf-docs-moved"
        parent: "/news"
        title: "Symfony CMF docs have been moved"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2012-10-26"
        body: |
              The Symfony CMF documentation is now part of the official documentation of Symfony itself. The new location
              is <a href="http://symfony.com/doc/master/cmf/index.html">here</a>. Looks much better now, but the still need help in getting
              the documentation into a state where they can really take a beginner and turn them into a CMF expert.
              The while current state touches on pretty much all aspects of the CMF, there is a lot of room of improvement
              in terms of language, details and introducing each concept in the right order. This is the kind of thing
              that is really hard for the original authors to get right, since they tend to be oblivious to such aspects.

    towards-version-1.0:
        name: "towards-version-1.0"
        parent: "/news"
        title: "Towards version 1.0"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2013-02-26"
        body: |
            <p>The last few months have seen a huge increase of activity on the CMF (we seem to not have written many news, but those following the github projects will have seen it). Both Jackalope and PHPCR-ODM and the CMF bundles got new features and tons of issues fixed. And the documentation is starting to take shape, but can still use a lot of improvement.</p>
            <p>With all this activity, it will be hard to draw the line for a 1.0 release, but nonetheless we need to do it. We built a <a href="https://github.com/symfony-cmf/symfony-cmf/wiki/Release-1.0">release plan</a> that wants to stabilize from the bottom up. We start with PHPCR and phpcr-utils, then go to Jackalope and its transports, then the Doctrine PHPCR-ODM and finally the Symfony CMF bundles. We created milestones in the PHPCR / Jackalope / PHPCR-ODM space for now. We hope to get through them until beginning of April, and should probably start version 1.0 milestones for the Symfony bundles mid of March and focus on the needed pieces in April.</p>
            <p>The scope of features we get will depend on the contributions by everybody. But on the other hand, there is no problem adding new features soon afterwards and frequently tagging new versions - as long as we do not need to break backwards compatibility. One important focus is thus to tackle those problems that could require BC breaks so we can get them over before going to a stable release.</p>

    how-to-survive-stabilization-phase:
        name: "how-to-survive-stabilization-phase"
        parent: "/news"
        title: "How to survive the stabilization phase"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2013-05-10"
        body: |
            <p>As you might have noticed, we reached a phase in the stabilization process where we clean up things and try avoid future architecture problems. This leads to lots of BC breaks (and we don't want to clutter the codebase with legacy support before a version 1.0 is even out).</p>
            <p>We now created a set of alpha tags for all relevant bundles. If you want to stay at the edge and don't mind adjusting to the occasional BC break, please keep using 1.0.* and report any issues. Otherwise, you can pin to the following versions to keep status quo and update the tags manually when you want a new feature.</p>
            <p><pre>
                "jackalope/jackalope-jackrabbit": "1.0.0-beta1",
                or
                "jackalope/jackalope-doctrine-dbal": "1.0.0-alpha1",

                "doctrine/phpcr-odm": "1.0.0-alpha1",
                "doctrine/phpcr-bundle": "1.0.0-alpha3",
                "sonata-project/doctrine-phpcr-admin-bundle": "1.0.0-alpha2",
                "symfony-cmf/core-bundle": "1.0.0-alpha1",
                "symfony-cmf/block-bundle": "1.0.0-alpha3",
                "symfony-cmf/content-bundle": "1.0.0-alpha2",
                "symfony-cmf/create-bundle": "1.0.0-alpha1",
                "symfony-cmf/menu-bundle": "1.0.0-alpha2",
                "symfony-cmf/simple-cms-bundle": "1.0.0-alpha2",
                "symfony-cmf/search-bundle": "1.0.0-alpha1",
                "symfony-cmf/tree-browser-bundle": "1.0.0-alpha2",
                "symfony-cmf/routing-bundle": "1.1.0-alpha1",
                "symfony-cmf/blog-bundle": "1.0.0-alpha1",
                "symfony-cmf/routing-auto-bundle": "1.0.0-alpha1"
            </pre></p></p>
            <p>You can alternatively depend on symfony-cmf/symfony-cmf which includes most of the above bundles. This will all get better once we have stable releases. Then we will not do BC breaks without updating the minor version, so that you can safely depend on 1.0.*.</p>
            <p>Note that the RoutingExtraBundle was renamed to RoutingBundle. There is 1.0.1 of RoutingExtraBundle which will be the last version with the old name. The above tagged versions already use the new RoutingBundle name. RoutingBundle master branch is already called 1.1 now. It dropped Symfony 2.1 support.</p>

    doctrine-dbal-repository-data-fixes:
        name: "doctrine-dbal-repository-data-fixes"
        parent: "/news"
        title: "Doctrine DBAL Repository Data Fixes"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2013-05-21"
        body: |
            <p>If you have updated your CMF bundles lately, you may have problems with PHPCR nodes created with an older implementation. The renaming of the RoutingExtraBundle to RoutingBundle will affect any route nodes stored with this class name and cause them to fail. Also due to a new feature of storing the node depth, previously created nodes which don't have this value could cause issues, one of which is the tree browser failing to load in Sonata Admin.</p>
            <p>The Doctrine DBAL MySQL backend can be fixed by executing this SQL which will patch up your existing data:</p>
            <p><pre>
                -- Rewrite depth column by counting slashes in path column
                UPDATE phpcr_nodes SET depth = (LENGTH(path) - LENGTH(REPLACE(path, '/', ''))) where id > 0;
                -- Root path has only one slash but should be set as depth zero
                UPDATE phpcr_nodes SET depth = 0 WHERE path = '/';

                -- Fix route nodes that reference RoutingExtraBundle and rename to RoutingBundle
                UPDATE phpcr_nodes
                SET props = REPLACE(props, 'RoutingExtraBundle', 'RoutingBundle')
                WHERE props LIKE '%RoutingExtraBundle%'
                AND id > 0;
            </pre></p></p>
            <p>If you wish to revert the change to the class name in your nodes (possibly because you revert back to older bundles for some reason) you can use this SQL:</p>
            <p><pre>
                -- Revert fix, rename to RoutingBundle back to RoutingExtraBundle
                UPDATE phpcr_nodes
                SET props = REPLACE(props, 'RoutingBundle', 'RoutingExtraBundle')
                WHERE props LIKE '%RoutingBundle%'
                AND id > 0;
            </pre></p></p>
            <p>If you don't like to execute this directly on your database I recommend you create a Doctrine migration using the fix SQL in the up() method, and the revert SQL in down().</p>


    getting-closer-to-1-0-release:
        name: "getting-closer-to-1-0-release"
        parent: "/news"
        title: "One hackday closer to the 1.0 release!"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2013-06-24"
        body: |
            <p>Last friday, a full dozen of CMF developpers gathered at the Liip Office in
            Zurich, Switzerland to exchange on the state of the project. We had people from
            England, Netherlands, France, Germany, Austria and Switzerland.
            <img src="https://blog.liip.ch/files/images/blog/20130621_cmf-hackday.jpg" width="845" alt="Group picture" title="Symfony CMF Hackday">
            We went over all bundles and sorted out issues and pull requests between 1.0 and
            later. We also discussed many open questions and decided on topics. We now
            effectively entered a scope freeze phase, meaning we don't want to add any new
            features to the 1.0 goals. Pull requests for open 1.0 issues as well as bugfixes
            are very welcome however.</p>

            <h3>Release plan</h3>
            <p>For a couple of weeks, there has been a "beta1" version of the CMF out. We
            still have a couple of BC breaks planned, but since beta1 they must be
            documented in the CHANGELOG.md file. A stable release will take some time yet,
            unfortunately. We postponed our goal release date to end of July. According to
            the <a href="http://cmf.davidbu.ch/?q=&facets[Milestones][]=1.0&facets[Milestones][]=1.1">dashboard tool</a>
            there are about 60 issues until then, ergo we have to close 12 issues per week.
            This sound like a lot - on the other hand we where 12 people at the meeting, so
            it would mean everybody has to solve one issue per week.</p>
            <p>We also sketched the
            <a href="https://github.com/symfony-cmf/symfony-cmf-docs/pull/168">release process</a>
            for after the 1.0 release is out. An intermediate 1.1 release is planned for
            autumn, after that we will follow the core Symfony release cycle with a delay
            of about one month.</p>

            <h3>How can I help?</h3>
            <p>If you would like to contribute, please look into the issues in milestone
            1.0 of each of the CMF bundles. While we all love great new features, we have
            to focus on cleaning the existing features and making sure they are future
            proof. If you don't know where to start, please ask on the
            <a href="http://groups.google.com/group/symfony-cmf-devs">mailinglist</a> or in
            <em>symfony-cmf</em> on <a href="https://slackinvite.me/to/symfony-devs">Symfony Slack</a>.</p>

    doctrine-dbal-repository-data-fixes-round2:
        name: "doctrine-dbal-repository-data-fixes-round2"
        parent: "/news"
        title: "Doctrine DBAL Repository Data Fixes Round 2"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2013-07-10"
        body: |
            <p>We did some more changes to Jackalope Doctrine DBAL which require some updated:</p>
            <p>First we <a href="https://github.com/jackalope/jackalope-doctrine-dbal/pull/109">
            fixed some issues related to date sorting and filtering</a>. This basically requires
            going through all nodes with a date property and forcing a change so that the date will
            now be stored in UTC format. With this change all nodes will always be returned in
            the timezone configured in the php.ini. For Jackalope Jackrabbit it will continue to
            return the timezone as it was provided originally however.</p>
            <p>The other change is a <a href="https://github.com/jackalope/jackalope-doctrine-dbal/pull/75">
            small change in the data structure for references</a> and requires the following steps</p>
            <p><pre>
                Run ``app/console doctrine:phpcr:init:dbal --dump-sql``
                Copy and execute all tables, indexes etc related to ``phpcr_nodes_references`` and ``phpcr_nodes_weakreferences``.

                Run the following SQL statements:
                INSERT INTO phpcr_nodes_references ( source_id, source_property_name, target_id )
                SELECT source_id, source_property_name, target_id
                FROM phpcr_nodes_foreignkeys WHERE type = 9;
                INSERT INTO phpcr_nodes_weakreferences ( source_id, source_property_name, target_id )
                SELECT source_id, source_property_name, target_id
                FROM phpcr_nodes_foreignkeys WHERE type = 10;

                Finally clean up the old table:
                DROP TABLE phpcr_nodes_foreignkeys;
            </pre></p></p>
            <p>If you don't like to execute this directly on your database I recommend you create a Doctrine migration using the fix SQL in the up() method, and the revert SQL in down().</p>

    symfony2-cmf-rc1-released:
        name: "symfony2-cmf-rc1-released"
        parent: "/news"
        title: "Symfony2 CMF RC1 released!"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2013-09-12"
        body: |
          <p>I think it was February 2010 at Symfony Live Paris, well over a year before the final release of Symfony 2,
          during the Q&A that I voiced by disappointment over the fact that so few (none?) of the big PHP applications
          are based on a general purpose web framework. That all of these applications choose to waste their time on
          building low level architecture pieces rather than focusing their energy on solving the higher level problems
          that their end users actually care about. That they in the end limit their the extensibility of their
          applications. That they also limit interoperability. I follow this up with a
          <a href="http://pooteeweet.org/blog/1674">blog post</a> but I also kind of felt
          that we framework authors needed to take a step towards the application developers. Luckily my co-workers at
          Liip agreed so we decided to do something about this by organizing a meeting in September 2010 and sponsoring
          travel expenses for many of the leading authors of CMS components for symfony 1.x. We came up with a game plan
          and then we got to work.</p>

          <p>Admittedly through out the first 2 years it was mainly Liip doing the work, partly funded by client
          projects. But Liip is a web agency, we wanted tools to build better solutions for our clients. So from day one
          we wanted to do this with the community. But through out this time we have had many people that have done very
          important contributions. Some of who only stayed for a bit but most of which are still very much around. In
          fact many of these contributors have been starting to reap the benefits of their investments building
          production applications for over a year already. Going down memory lane always runs the risk of forgetting
          someone but from the top of my head I want to thank Johannes and Uwe for being the first non Liipers to have
          done significant contributions to Jackalope. Then there is of course also Benjamin who wrote the initial
          version of the Doctrine DBAL integration for Jackalope, which meant we no longer required Java. In the same
          way Henri and Petrius brought us the MidgardCR alternative implementation of PHPCR. Henri of course also
          introduced us to create.js. Then Nacho Martin for singlehandedly getting SonataDoctrinePHPCRBundle off the
          ground. And of course Thomas for having created the Sonata project in the first place. I also want to thank
          Ideato for their various contributions, organizing hackdays, working on the very early concepts of the Routing
          component which has since been adopted by ezPublish and Drupal. This really validates the goal of making it
          easier for these well established applications to adopt a general purpose framework. I also want to thank
          Freddy for his part in proofing that we were on the right path.</p>

          <p>However these days it is no longer just a few people joining the effort temporarily. We have a
          <a href="http://cmf.symfony.com/about">vibrant community</a> where Liip is still very much involved but the
          community is now doing the majority of the work. In many ways this might even be more important for the
          survival of the initiative in the long run than getting every technical aspect just right. That being said,
          the huge number of contributors, doing <a href="http://cmf.symfony.com/references">real world projects</a>,
          of course help find flaws in the concepts and validate what we got right. As such we can claim with confidence
          that the CMF in its current state has proven itself in the real world in multiple projects done by multiple
          different companies all over Europe. This in turn also means that its future is no longer dependent on a
          single company let alone a single client. The community is alive and well and growing.</p>

          <p>So its with great pleasure that I can announce that we have finally moved all the key components to release
          candidate state. This means that while we still have a
          <a href="https://groups.google.com/d/msg/symfony-cmf-devs/oITg4bIGBsk/H1_AwjUEhR4J">few tasks</a> we want to
          wrap up, we believe we now have a coherent well tested system to enable to build custom CMS projects on top of
          Symfony. We will use the rest of the month to work to wrap up some open items in the storage layer and get as
          many of the nice to have's in the Bundles done. Also while our documentation is already quite extensive, a lot
          of details especially in the configuration were changed for better consistency in the last weeks which are not
          yet reflected in the documentation. So there are plenty of tasks for people who want to join the effort now.
          We certainly appreciate it and as a project we have always put great emphasis on investing into new potential
          contributors. So come join our <a href="http://groups.google.com/group/symfony-cmf-devs">mailinglist</a> or
          the #symfony-cmf channel on <a href="https://slackinvite.me/to/symfony-devs">Symfony Slack</a>!</p>

          <p>So for the historians among you its possible to get a good overview of the different development stages
          of the CMF by going through all the CMF related posts in the
          <a href="http://blog.liip.ch/?start=0&q=cmf">Liip blog</a>. Listening to the
          <a href="http://pierrespring.com/2010/09/20/ps001-discussion-symfony2-cmf/">podcast Pierre recorded</a> during
          our first meeting in the summer of 2010. Boy was I niav to believe we could release our first stable release
          close to the first stable release of Symfony 2 itself.</p>

          <p>Let me end this post with some numbers (generated using
          <a href="https://github.com/roderik/GithubStats">GithubStats</a>):</p>

          <p><pre>
          ./ghs compile phpcr
          Contributions:     1360
          Contributors:      39
          Forks:             69
          Watchers:          323
          Downloads total:   85639
          Downloads monthly: 4100
          </pre></p>

          <p><pre>
          ./ghs compile jackalope
          Contributions:     4457
          Contributors:      40
          Forks:             90
          Watchers:          242
          Downloads total:   77642
          Downloads monthly: 4106
          </pre></p>

          <p><pre>
          ./ghs compile symfony-cmf
          Contributions:     6383
          Contributors:      146
          Forks:             492
          Watchers:          1215
          Downloads total:   284072
          Downloads monthly: 17038
          </pre></p>

          <p>To give get some perspective on those numbers lets compare to Symfony. Remember that Symfony is the most
          active PHP project on github of all time and the CMF started quite a bit later.</p>

          <p><pre>
          ./ghs compile symfony
          Contributions:     36266
          Contributors:      1080
          Forks:             4667
          Watchers:          10094
          Downloads total:   13041336
          Downloads monthly: 831751
          </pre></p>

    symfony2-cmf-1-0-0-released:
        name: "symfony2-cmf-1-0-0-released"
        parent: "/news"
        title: "Symfony2 CMF 1.0.0 released!"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2013-10-16"
        body: |
          <p>It took us a few days more than expected since there were some interfaces we wanted to iron
          out in our youngest Bundle, the MediaBundle. But now its done with the releases of PHPCR
          Jackalope and PHPCR ODM last week and Monday's release of all of the key CMF Components and
          Bundles. The first stable release of any project marks a major mile stone as we now expect
          quite a few more casual users to join the effort, where previously most users were effectively
          also part of the core developer team. At any rate you can find all the details over on
          <a href="http://symfony.com/blog/the-symfony-cmf-released-its-first-stable-version">symfony.com</a>.

    conference-presence-2013:
        name: "conference-presence"
        parent: "/news"
        title: "Conferences with CMF presentations in 2013"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2013-10-20"
        body: |
          <p>CMF developers will present the framework at conferences. This is a good opportunity to get into the CMF
          or ask your questions. We will try to update this post if other talks are announced. Currently, we know about:</p>

          <ul>
            <li><a href="http://www.afup.org/pages/forumphp2013/sessions.php#867">ForumPHP in Paris, 21.11.2013 (presentation in french)</a></li>
            <li><a href="http://2013.drupalcamp.at/session/stone-masons-vs-3d-printer-cms-world">DrupalCamp in Vienna, 23./24.11.2013 (this one in english)</a></li>
            <li><a href="http://warsaw2013.symfony.com/speakers#session-950">SymfonyCon in Warszaw, 12.12.2013 (this one in english)</a></li>
          </ul>

    cmf-best-symfony-opensource-project-2013:
        name: "cmf-best-symfony-opensource-project-2013"
        parent: "/news"
        title: "CMF won Open-Source Application Award 2013"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2013-12-29"
        body: |
          <p><img src="/images/cmf-best-os-2013.jpg" style="float:left; margin-right: 10px;"/>
          During the SymfonyCon Warsaw, the Symfony CMF project was
          <a href="http://awards.symfony.com/business">awarded</a> the &quot;Best Open-Source
          application of the year&quot;. This is a great compliment to all the contributors
          that made the CMF possible with their huge effort!</p>

          <p>Lets continue to rock in 2014!</p>

    finally-1-1-RC1:
        name: "finally-1-1-0-RC1"
        parent: "/news"
        title: "Finally! 1.1.0-RC1"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2014-04-08"
        class: "\\AppBundle\\Document\\SeoPage"
        seo-metadata:
            description: "Finaly got the 1.1.0-RC1"
            keywords:    "Release candidate"
        body: |
          <p>Once we released 1.0, we did not sit idle. Instead we immediately began work on improving the CMF.
          In fact there was such a continuous stream of good ideas and things that felt like a must have, that
          we let ourselves slip quite far from our <a href="http://symfony.com/doc/master/cmf/contributing/releases.html">
          defined release process</a>. Or lets say we had every intention of aliging ourselves with the Symfony
          core release cycle by releasing within 1-2 months of core which would have meant a 1.1 release in January.
          Instead it tooks us 6 months to get to RC1, which on the upside is inline with what we intended for future
          releases.</p>

          <p>As we feared, it turns out that we had to do a few minor BC breaks which we tried to document as much as
          possible in the CHANGELOG.md files in the respective packages. We also have updated the documentation already
          with lots of details on the new features we added. Unfortunately due to limitation in the current symfony.com
          website, we cannot provide a rendered version just yet. So for now please review the
          <a href="https://github.com/symfony-cmf/symfony-cmf-docs/tree/dev">dev branch</a>. Hopefully we will
          eventually also be able to provide multiple versions of the CMF documentation just like it is possible for
          the core documentation.</p>

          <p>Let me briefly highlight some of the key improvements that are coming with 1.1:
          <ul>
            <li>A lot of effort was spend in making the CMF more resilent towards edge cases and given better more
            helpful error messages.</a>
            <li>Support for newer version of Jackalope and PHPCR ODM, that bring lots of bug fixes, speed improvements,
            and better debugging and profiling (including Symfony debug toolbar support).</li>
            <li>The routing system was made even more flexible, meaning there is even less code to write when
            implementing a new storage backend. As a result much less code is now needed in SimpleCmsBundle for
            routing.</li>
            <li>The menu system has seen several tweaks, most noteably it is now possible to configure a fetch depth,
            which can give drastic performance improvements for deeply nested menu structures.</li>
            <li>A new Bundle was added for handling SEO meta data.</a>
            <li>A totally reworked Standard Edition that is based on the core Standard Edition to make it easier
            to understand what is necessary to add to a Symfony application to integrate the CMF.</li>
          </ul>
          </p>

          <p>So what is still left until we can go stable? For now we want to give at least 2 weeks from now to allow
          the community to do some testing and to focus on bringing all the documentation up to date. So expect a stable
          release at the earliest towards the end of April at the latest sometime in May. Other than this the main
          areas where we might still see some changes are:
          <ul>
              <li>The Bundle for handling media data might see some more improvements for
              <a href="https://github.com/symfony-cmf/MediaBundle/pull/82">handling of uploads</a>.</li>
              <li>The Bundle for handling routing might see the addition of a solution to do
              <a href="https://github.com/symfony-cmf/Routing/pull/101">batch lazy loading</a>.</li>
              <li>The CMF Standard Edition will be <a href="https://groups.google.com/forum/#!topic/symfony-cmf-devs/DtAzizrm4D8">aligned more closely with the Symfony core Standard Edition</a>.</li>
              <li>Updating documentation and ideally figuring out a solution to provide both the 1.0 and 1.1 docs in parallel.</li>
              <li>More testing and fixing any edge cases that our users discover.</li>
          </ul>
          </p>

          <p>To get an idea of what is needed to update to 1.1, have a look at the
          <a href="https://github.com/symfony-cmf/symfony-cmf-website/pull/43">PR to update this website</a> to the new
          version. Also note that the <a href="https://github.com/symfony-cmf/cmf-sandbox">CMF sandbox has also already
          been upgraded to 1.1</a>.</p>

          <p>We are also very happy with the growing eco-system around PHPCR. Most noteably there is now a
          <a href="https://github.com/phpcr/phpcr-shell">PHPCR shell</a> to interact with a PHPCR repository as well as
          finally a <a href="https://github.com/marmelab/phpcr-browser">PHPCR GUI</a> that supports reading and writing
          via a web interface!</p>

    cmf-workshop-phpday-it:
        name: "cmf-workshop-phpday-it"
        parent: "/news"
        title: "Short CMF workshop at phpDay in Italy"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2014-04-18"
        body: |
          <p>
              David Buchmann will do a CMF workshop at the <a href="http://2014.phpday.it">phpDay</a> in Verona, Italy.
              phpDay takes place on May 16th and 17th. Details will be published by the organizers on  the
              <a href="http://2014.phpday.it/talk/content-management-with-symfony2/">programme page</a>.
          </p>
          <p>
              If you can make it to the conference, its a good opportunity to get introduced to the CMF and
              listen to many <a href="http://2014.phpday.it/talk/">other interesting talks</a>.
          </p>

    1-1-stable-release:
        name: "1-1-stable-release"
        parent: "/news"
        title: "1.1 stable release"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2014-05-14"
        body: |
          <p>
              We are pleased to announce the 1.1 stable release of the CMF. This follows a series of
              RCs released over the past weeks that helped us iron out details. It also gave us time
              to work on the documentation and so from now on you can find the
              <a href="http://symfony.com/doc/master/cmf/index.html">documentation for the 1.1 release on symfony.com</a>.
          </p>
          <p>
              You can find details about the changes and improvements in the
              <a href="http://cmf.symfony.com/news/finally-1-1-0-RC1">announcement news for the
              first RC</a>. In short we have done a lot of work in simplifying the use of the CMF especially
              in terms of configuration and debugging. We have also improved performance in a few places
              and added various useful features. We also have a new Bundle for SEO optimizations.
          </p>
          <p>
              Looking ahead the main areas to work on are further speed up performance (especially
              with the <a href="https://github.com/symfony-cmf/MenuBundle/issues/19">menu system</a>) and
              improvements to the <a href="https://github.com/symfony-cmf/MediaBundle">media managament</a>.
              We also plan to finish the <a href="https://github.com/symfony-cmf/RoutingAutoBundle">RoutingAutoBundle</a>
              to make it easier to generate routes automatically for content. We also did
              <a href="https://github.com/jackalope/jackalope-prismic">initial work</a> on
              integrating the CMF with the <a href="https://prismic.io">prismic.io</a> content repository as a service
              provider which we hope to mature over the coming months to a viable alternative to our
              other storage options.
          </p>
          <p>
              While the bulk of the work is done by a few regular contributors, we would like to thank
              everyone who has submitted improvements small or large. The fact that so many developers
              work on the CMF on some level validates the goals of the CMF, bringing together the entire
              Symfony eco-system to collaborate on CMS functionality. This is probably best highlighted
              by the fact of how many projects reference the CMF
              <a href="https://www.versioneye.com/php/symfony-cmf:routing/references">routing component</a> and
              accompanying <a href="https://www.versioneye.com/php/symfony-cmf:routing-bundle/references">RoutingBundle</a>.
              Again thank you all for your investment into a stronger community.
          </p>

    1-2-first-release-candidate:
        name: "1-2-first-release-candidate"
        parent: "/news"
        title: "1.2 first release candidate"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2014-08-21"
        body: |
          <p>
              It is time for another update. The release process for 1.2 has begun with RC1 releases of
              all of our components and bundles. We expect final releases in the next few weeks, certainly
              before the end of Q3. Note that the documentation on
              <a href="http://symfony.com/doc/master/cmf/index.html">symfony.com</a> is still for 1.1, as
              currently we can unfortunately only render a single version. So please check the
              <a href="https://github.com/symfony-cmf/symfony-cmf-docs/compare/master...dev">dev branch</a>
              on the symfony-cmf-docs repository to see the updated docs. That being said, as the main
              code development efforts are now complete, we will now focus our energy on fixing any bugs
              reported for these releases as well as documentation. So expect to see much better
              documentation to be added on the dev branch for all the new features and changed.
          </p>
          <p>
              However, the biggest new feature in this release is that we finally are preparing
              a stable release of <a href="https://github.com/symfony-cmf/RoutingAutoBundle">RoutingAutoBundle</a>.
              This Bundle automates the creation of routes based on rules. For example the Bundle can
              automatically create a route to any new content that was created. Or it can be used to
              automatically create redirect routes whenever a route is moved. Also we moved everything to
              use <a href="http://www.php-fig.org/psr/psr-4/">PSR-4</a> autoloading, which will likely not
              have a big impact for development except for shorter directory names.
          </p>
          <p>
              In parallel we are also working on improvements for Jackalope and PHPCR ODM. Especially
              Jackalope Doctrine DBAL as well as PHPCR ODM will see major performance improvements
              with the next releases. PHPCR ODM also has many improvements related to events. If you
              want to keep up with work on PHPCR related topics we recommend you keep an eye on the
              news section on the newly designed <a href="http://phpcr.github.io">PHPCR homepage</a>.
          </p>

    1-2-on-the-home-stretch:
        name: "1-2-on-the-home-stretch"
        parent: "/news"
        title: "1.2 on the home stretch"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2014-10-07"
        body: |
          <p>
              We have been working on finalizing the 1.2 release of the CMF since over a month now but
              it looks like we are now finally on the home stretch. We encountered some tricky issues
              in the refactorings we have done to the multilang support in PHPCR ODM. Note there are
              some edge case BC breaks in the multilang support especially affecting events. So we urge
              all users to test the latest release candidates to ensure that we are not causing
              severe issues. We rather work a bit more on getting things just right. That being said
              thankfully several users have been testing our RCs and have reported issues already.
              So at this point we are quite confident that we will have a great release ready to ship
              next week!
          </p>

    cmf-wins-ch-open-source-award-2014:
        name: "cmf-wins-ch-open-source-award-2014"
        parent: "/news"
        title: "Symfony CMF wins CH Open Source Award 2014"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2014-10-08"
        body: |
          <p><img src="/images/cmf-ch-open-source-award-2014.jpg" style="float:left; margin-right: 10px;"/>
          <p>
            The CMF was selected by the swiss open source organisation /ch/open to receive the OSS award.
            The jury describes the award as follows:
          </p>

          <p>
            <em>"The OSS Awards recognise businesses, public authorities, open source communities and
            individuals who have used and developed open source software in an innovative and
            groundbreaking way."</em>
          </p>

          <p>
            The convincing arguments for selecting the CMF is that the swiss company
            <a href="http://www.liip.ch/">Liip</a> started this initiative, but managed to make the
            CMF a tool that is used in various countries and attracted an international group of
            contributors. Swiss users of the CMF include the <a href="http://opendata.admin.ch/">Open
            Government Data Portal</a> and the TV station <a href="http://www.joiz.ch/">Joiz</a>.
          </p>

          <p>
            After winning the <a href="http://cmf.symfony.com/news/cmf-best-symfony-opensource-project-2013">
            Best Open-Source Application Award</a> at SymfonyCon Warszaw 2013, we are very proud to receive
            this award.
          </p>

    1-2-stable-released:
        name: "1-2-stable-released"
        parent: "/news"
        title: "1.2 stable released"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2014-10-25"
        body: |
          <p>
              Today we have finally tagged the last packages and with this the CMF has reached 1.2!
              Unfortunately we ended up setting HHVM as an allowed failure in our test setup due to
              an <a href="https://github.com/travis-ci/travis-ci/issues/2863">configuration issue on
              Travis CI with HHVM 3.3</a>, however things were working fine with 3.2 and we expect
              once the configuration issue is resolved, things will work fine with 3.3 as well. All
              packages however are now also tested against PHP 5.6, as well as Symfony 2.5 and the
              upcoming 2.6.
          </p>

          <p>
              In terms of features, as mentioned in a previous news item PHPCR ODM has seen
              significant improvements related to the events system, the native translation support
              and performance related to collections. Another big step forward is that we are now
              also compatible with the recently released <a href="http://sonata-project.org/bundles/admin/2-3/doc/index.html">
              SonataAdminBundle 2.3</a>, which provides significant improvements especially on the
              UI side. Furthermore, DoctrinePHPCRBundle now optionally supports the
              <a href="https://github.com/phpcr/phpcr-shell"> PHPCR shell</a>. Other than that most
              Bundles have seen incremental improvements related to developer experience,
              performance or minor feature additions.
          </p>

          <p>
              Likely the biggest step forward for the CMF however is the first stable release of
              the <a href="http://symfony.com/doc/master/cmf/bundles/routing_auto/index.html">
              RoutingAutoBundle</a> and its underlying library. With it users can automate the
              creation of routes. For example when a new content document is created, a route
              document is automatically created. Or when a route is moved, a redirect from the
              previous location is created as well. This makes it a lot easier to leverage the
              ability of the CMF to keep the content and route structure separate, as it allows
              a best of both worlds approach where most route related work is automated, but
              it still is possible to easily manually manage the route structure independent
              of the content structure.
          </p>

          <p>
              As always we are also thrilled to see a steady increased in contributors providing
              feedback, fixes and improvements small or large. In order to allow users to
              quickly get a taste of what is possible, we have of course also updated our
              <a href="http://sandbox.cmf.symfony.com">demo</a> to use the latest version of the sandbox. The
              <a href="http://symfony.com/doc/master/cmf/index.html">documentation</a> has also
              been updated to cover the new features.
          </p>

    getstarted:
        name: "get-started"
        title: "Get Started"
        body: |
            <h2>Get started</h2>

            <p>
                Want to get started with the project? The best way to get your feet wet is follow the standard edition
                <a href="http://symfony.com/doc/master/cmf/book/installation.html">installation instructions</a>.
            </p>

            <p>
                If you have further questions or need help getting started, visit our <a href="http://symfony.com/doc/master/cmf/index.html">documentation</a>
                page or contact us in the #symfony-cmf channel on <a href="https://slackinvite.me/to/symfony-devs">Symfony Slack</a>. There is almost always someone around happy
                to help you get started!
            </p>

    hackdays-in-wuerzburg:
        name: "hackdays-in-wuerzburg"
        parent: "/news"
        title: "Symfony CMF Hackdays in Würzburg (12/13 Dec. 2014)"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2014-11-26"
        body: |
          <p>
              The Mayflower Gmbh will host the next Symfony CMF Hackday in Würzburg, Germany.
              It will be focused on the <a href="https://github.com/symfony-cmf/symfony-cmf/wiki/Release-1.3">
              roadmap for the 1.3 release</a>. We are going to have nearly two days of hacking
              and pushing the CMF forward to the next version.
          </p>
          <p>
              You can sign up to the event on <a href="http://doodle.com/8u9aiadta2mvxrpm">Doodle</a>.
              There will be a public workshop as an opener, too. You can get more information via the
              <a href="https://www.facebook.com/events/784651721602385/?unit_ref=popular_with_friends">
              Facebook-Event</a>. This workshop is public, but limited to 8 persons.
          </p>
          <p>
              Both events are located at: <br /><br />
              <a href="https://mayflower.de/">Mayflower GmbH</a><br />
              Gneisenaustraße 10/11<br />
              97074 Würzburg<br />
              Germany<br />
          </p>

    cmf-admin-survey:
        name: "cmf-admin-survey"
        parent: "/news"
        title: "Results of the Sonata Admin survey"
        label: false
        template: cms/news_detail.html.twig
        publish_start_date: "2014-12-08"
        body: |
          <p>
              Earlier this year, we did a little user survey to learn what people are doing with Sonata Admin in their CMF projects.
              We got about ten replies with detailed inputs. In summary, we got the feedback that the admin interface feels cleaned
              up because only the used features are present. Rather than other systems, where the developer has to remove everything
              that is not used, CMF developers only add what is needed, leading to a cleaner interface.
          </p>
          <p>
              Below are the questions and a summary of the responses. Where applicable, the related issues are linked:
          </p>
          <h3>What works well in the administration interface?</h3>
          <ul>
            <li>CRUD</li>
            <li>Embedding blocks into the page editing.</li>
            <li>Navigation by content type</li>
          </ul>

          <h3>What does not work?</h3>
          <ul>
            <li>
              Selecting content with the tree browser is difficult. The tree browser has no filter to
              only present allowed types of documents, and no typing with autocomplete.<br/>
              See <a href="https://github.com/sonata-project/SonataDoctrinePhpcrAdminBundle/labels/tree%20view">Tree view issues</a>.
            </li>
            <li>
              The admin is data type oriented, rather than content structure oriented. The tree is only
              available on the home page so editors lose their context.
            </li>
            <li>Media management needs to be improved to become more convenient.</li>
          </ul>
          <h3>What is missing?</h3>
            <ul>
              <li>
                <a href="https://github.com/sonata-project/SonataDoctrinePhpcrAdminBundle/issues/27">Versioning management</a>,
                deciding which document is online.
              </li>
              <li>Better editing of tree structures (Menu, URLs)</li>
              <li>
                Tool to create internal links in text fields in the admin (could be reused in frontend editing too).<br/>
                See <a href="https://github.com/symfony-cmf/RoutingBundle/issues/207">github issue</a>.
              </li>
              <li>
                Multidomain support, e.g. in the routing. <strong>Note</strong>: This has
                <a href="http://symfony.com/doc/master/cmf/bundles/routing/configuration.html#route-basepaths">been added</a>
                since the survey was conducted.
              </li>
              <li>
                Standard way of connecting Doctrine ORM entities with PHPCR-ODM documents and back.<br/>
                There are several incomplete approaches, see <a href="https://groups.google.com/forum/#!topic/symfony-cmf-devs/QIqaSI5bQ90">this discussion</a>.
              </li>
            </ul>

          <h3>What are your pain points while developing the admin?</h3>
          <ul>
            <li>
              Documentation of Sonata Admin is lacking. Particularly on customizing templates (figuring out template
              names, missing blocks as extension points leading to overwrite large templates), for relations, and the
              <a href="https://github.com/sonata-project/SonataDoctrinePhpcrAdminBundle/issues/252">integration with standard symfony forms</a>.
            </li>
            <li>
              Too many ways to accomplish the same thing: Parameters in the service definition, overwriting
              methods or properties in the admin. Each admin class does everything, difficult to reuse tables or lists.
            </li
            <li>
              Multilanguage support: See what languages the document was translated to, select the language to edit.<br/>
              See <a href="https://github.com/sonata-project/SonataDoctrinePhpcrAdminBundle/issues/26">this github issue</a>.
            </li>
            <li>Missing tools for PHPCR. <strong>Note</strong>: Since the survey was conducted, there appeared both the console
              <a href="https://github.com/phpcr/phpcr-shell">phpcr-shell</a> and the visual
              <a href="https://github.com/marmelab/phpcr-browser">PHPCR Browser</a>.
            </li>
          </ul>
          <p>Thanks to everybody who gave their feedback!</p>

    getinvolved:
        name: "get-involved"
        title: "Get Involved"
        body: |
            <h2>Get involved</h2>

            <p>Want to get involved with the project? Here are some simple things you can do to get started:</p>

            <ol>
                <li>
                    Join the <a href="http://groups.google.com/group/symfony-cmf-devs">developers</a>
                    mailing list and introduce yourself to the group.
                </li>
                <li>
                    Idle on #symfony-cmf in the <a href="https://slackinvite.me/to/symfony-devs">Symfony Slack</a>
                    and introduce yourself there as well.
                </li>
                <li>
                    Read the <a href="/about">about</a> page.
                </li>
                <li>
                    Read through the <a href="http://wiki.github.com/symfony-cmf/symfony-cmf">Github Wiki</a> as well
                    as the <a href="http://symfony.com/doc/current/cmf/">Symfony CMF docs</a>.
                </li>
            </ol>

    references:
        name: "references"
        title: "References"
        class: "\\AppBundle\\Document\\SeoPage"
        seo-metadata:
            description: "References for the Symfony CMF"
            keywords:    "Reference"
        body: |
            <h2>References</h2>

            <p>Here is a short overview of websites created with the Symfony CMF:</p>

            <ul>
                <li>
                    <a href="http://www.delindenberg.com/" target="_new">Delindenberg.com</a>
                </li>
                <li>
                    <a href="http://digitalvisions-schattdecor.com/" target="_new">Digitalvisions-Schattdecor.com</a>
                </li>
                <li>
                    <a href="http://www.jaumevidalarasa.cat/" target="_new">www.jaumevidalarasa.cat</a>
                </li>
                <li>
                    <a href="http://liip.ch/" target="_new">Liip.ch</a>
                </li>
                <li>
                    <a href="http://www.mzv.de/" target="_new">Mzv.de</a>
                </li>
                <li>
                    <a href="http://www.plant-for-the-planet.org/" target="_new">Plant-for-the-planet.org</a>
                </li>
                <li>
                    <a href="http://www.preisbarometer.ch/" target="_new">Preisbarometer.ch</a> / <a href="http://www.barometredesprix.ch" target="_new">Barometredesprix.ch</a> / <a href="http://www.barometrodeiprezzi.ch" target="_new">Barometrodeiprezzi.ch</a>
                </li>
                <li>
                    <a href="http://www.prestaconcept.net/" target="_new">PrestaConcept.net</a>
                </li>
                <li>
                    <a href="http://rotterdamunlimited.com/" target="_new">Rotterdamunlimited.com</a>
                </li>
                <li>
                    <a href="http://opendata.admin.ch" target="_new">Swiss Open Government Data</a> (in combination with <a href="http://ckan.org" target="_new">Ckan</a>)
                </li>
                <li>
                    <a href="http://www.talliando.de/" target="_new">Talliando.de</a>
                </li>
            </ul>

            <p>Here is a short overview of projects using the Symfony CMF:</p>

            <ul>
                <li>
                    <a href="http://concertocms.org" target="_new">Concerto CMS</a>
                </li>
                <li>
                    <a href="http://www.drupal.org/" target="_new">Drupal 8</a>
                </li>
                <li>
                    <a href="http://ez.no/" target="_new">ezPublish 5</a>
                </li>
                <li>
                    <a href="http://bundles.kunstmaan.be" target="_new">Kunstmaan CMS</a>
                </li>
                <li>
                    <a href="http://prestaconcept.github.io/presta-cms-core/" target="_new">PrestaCMS</a>
                </li>
                <li>
                    <a href="http://sulu.io/" target="_new">SuluCMF</a>
                </li>
                <li>
                    <a href="http://sylius.org/" target="_new">Sylius</a>
                </li>
                <li>
                    <a href="http://togu.io" target="_new">Togu</a>
                </li>
                <li>
                    <a href="https://github.com/superdesk/web-publisher" target="_new">Superdesk Web Publisher</a>
                </li>
            </ul>
    about:
        name: "about"
        title: "About"
        class: "\\AppBundle\\Document\\SeoPage"
        seo-metadata:
            description: "About the Symfony CMF"
            keywords:    "About"
        body: |
            <h2>About</h2>

            <p>
            The <a href="http://symfony.com">Symfony</a> Content Management
            Framework project was started by a large group of Symfony developers looking
            to get an early start on collaborating together for the next generation
            of PHP Content Management Systems built on top of Symfony. Several companies
            and developers have dedicated themselves to the project. Some of the companies
            and developers that are most avtive can be found below. Please feel invited
            to join the effort with or without the backing of a company behind you:
            </p>

            <h2>Sponsors</h2>

            <table>
                <thead>
                    <tr>
                        <th>Company</th>
                        <th>Location</th>
                        <th>Team</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td></td>
                        <td>United Kingdom</td>
                        <td><a href="https://github.com/dantleech">Dan</a></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>Germany</td>
                        <td><a href="https://github.com/nacmartin">Nacho</a></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>Netherland</td>
                        <td><a href="https://github.com/WouterJ">Wouter</a></td>
                    </tr>
                    <tr>
                        <td><a href="http://coddict.com/">Coddict</a></td>
                        <td>Canada</td>
                        <td><a href="http://twitter.com/freddyhaddad">Frederic</a></td>
                    </tr>
                    <tr>
                        <td><a href="http://ideato.it/">Ideato</a></td>
                        <td>Italy</td>
                        <td><a href="https://github.com/jakuza">Jacopo</a>, <a href="https://github.com/micheleorselli">Michele</a></td>
                    </tr>
                    <tr>
                        <td><a href="http://www.jetbrains.com/">JetBrains</a></td>
                        <td>Global</td>
                        <td></td>
                    <tr>
                        <td><a href="http://liip.ch/">Liip AG</a></td>
                        <td>Switzerland</td>
                        <td><a href="https://github.com/lsmith77">Lukas</a>, <a href="https://github.com/dbu">David</a>, <a href="https://github.com/chregu">Chregu</a></td>
                    </tr>
                    <tr>
                        <td><a href="http://www.netvlies.nl/">Netvlies</a></td>
                        <td>Netherland</td>
                        <td><a href="https://github.com/sjopet">Sjoerd</a>, <a href="https://github.com/krizon">Kristian</a></td>
                    </tr>
                    <tr>
                        <td><a href="http://www.prestaconcept.net">PrestaConcept</a></td>
                        <td>France</td>
                        <td><a href="https://github.com/nicolas-bastien">Nicolas</a></td>
                    </tr>
                    <tr>
                        <td><a href="http://sensiolabs.com/">Sensio Labs</a></td>
                        <td>France</td>
                        <td><a href="https://github.com/fabpot">Fabien</a></td>
                    </tr>
                    <tr>
                        <td><a href="http://platform.sh/">Platform.sh</a></td>
                        <td>France / United States</td>
                        <td>Andrew, <a href="https://github.com/robertDouglass">Robert</a></td>
                    </tr>
                    <tr>
                        <td><a href="http://www.valiton.com/">Valiton GmbH</a></td>
                        <td>Germany</td>
                        <td><a href="https://github.com/starkj">Johannes</a>, <a href="https://github.com/sveriger">Sven</a>, <a href="https://github.com/uwej711">Uwe</a></td>
                    </tr>
                    <tr>
                        <td><a href="http://www.vtdesignworks.com/">Vermont Design Works</a></td>
                        <td>United States</td>
                        <td><a href="https://github.com/benglass">Ben</a></td>
                    </tr>
                    <tr>
                        <td><a href="https://mayflower.de/">Mayflower</a></td>
                        <td>Germany</td>
                        <td><a href="https://github.com/ElectricMaxxx">ElectricMaxxx</a></td>
                    </tr>
                </tbody>
            </table>

            <h2>Resources/Links</h2>

            <ul>
                <li><strong>GitHub</strong>: <a href="https://github.com/symfony-cmf/symfony-cmf">https://github.com/symfony-cmf/symfony-cmf</a></li>
                <li><strong>Website</strong>: <a href="http://cmf.symfony-project.org/">http://cmf.symfony-project.org/</a></li>
                <li><strong>Wiki</strong>: <a href="http://wiki.github.com/symfony-cmf/symfony-cmf/">http://wiki.github.com/symfony-cmf/symfony-cmf/</a></li>
                <li><strong>Issue Tracker</strong>: <a href="http://github.com/symfony-cmf/symfony-cmf/issues">http://github.com/symfony-cmf/symfony-cmf/issues</a></li>
                <li><strong>Slack</strong>: #symfony-cmf in <a href="https://slackinvite.me/to/symfony-devs">Symfony Slack</a></li>
                <li><strong>Users mailing list</strong>: <a href="http://groups.google.com/group/symfony-cmf-users">http://groups.google.com/group/symfony-cmf-users</a></li>
                <li><strong>Devs mailing list</strong>: <a href="http://groups.google.com/group/symfony-cmf-devs">http://groups.google.com/group/symfony-cmf-devs</a></li>
            </ul>
